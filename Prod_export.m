function varargout = Prod_export(varargin)
% PROD_EXPORT MATLAB code for Prod_export.fig
%      PROD_EXPORT, by itself, creates a new PROD_EXPORT or raises the existing
%      singleton*.
%
%      H = PROD_EXPORT returns the handle to a new PROD_EXPORT or the handle to
%      the existing singleton*.
%
%      PROD_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in PROD_EXPORT.M with the given input arguments.
%
%      PROD_EXPORT('Property','Value',...) creates a new PROD_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before Prod_export_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to Prod_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES
global slider3 slider7 TRef TWGS MMeth MEau edit3 edit4;
format bank
% Edit the above text to modify the response to help Prod_export

% Last Modified by GUIDE v2.5 24-Oct-2016 16:17:24

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @Prod_export_OpeningFcn, ...
                   'gui_OutputFcn',  @Prod_export_OutputFcn, ...
                   'gui_LayoutFcn',  @Prod_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before Prod_export is made visible.
function Prod_export_OpeningFcn(hObject, eventdata, handles, varargin)
global slider3 slider7 TRef TWGS MMeth MEau edit3 edit4;
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to Prod_export (see VARARGIN)

% Choose default command line output for Prod_export
handles.output = hObject;
set(handles.text8,'String',num2str(get(slider3,'Value')));
set(handles.text7,'String',num2str(get(slider7,'Value')));
set(handles.edit3,'String',400);
set(handles.edit4,'String',1500);

TRef=get(slider7,'Value');
TWGS=get(slider3,'Value');
MMeth=400;
MEau=1500;
[tab1 tab2 tab3 purete] = Gestion(MMeth, MEau,TRef,TWGS);
format bank
 set(handles.uitable1,'data',tab1);
 set(handles.uitable6,'data',tab2);
 set(handles.text12,'String',MEau*0.016/(MMeth*0.018));
 set(handles.uitable8,'data',tab3);
 set(handles.text14,'String',purete);
 
% Update handles structure
guidata(hObject, handles);

% UIWAIT makes Prod_export wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = Prod_export_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on slider movement.
function slider3_Callback(hObject, eventdata, handles)
global TRef TWGS MMeth MEau;
% hObject    handle to slider3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider

set(handles.text8,'String',num2str(get(hObject,'Value')));
TWGS = get(hObject,'Value');
[tab1 tab2 tab3 purete] = Gestion(MMeth, MEau,TRef,TWGS);
 set(handles.uitable1,'data',tab1);
 set(handles.uitable6,'data',tab2);
 set(handles.uitable8,'data',tab3);
 set(handles.text14,'String',purete);

% --- Executes during object creation, after setting all properties.
function slider3_CreateFcn(hObject, eventdata, handles)
global slider3;
% hObject    handle to slider3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
slider3 = hObject;

if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes on slider movement.
function slider7_Callback(hObject, eventdata, handles)
global TRef TWGS MMeth MEau;
% hObject    handle to slider7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'Value') returns position of slider
%        get(hObject,'Min') and get(hObject,'Max') to determine range of slider
set(handles.text7,'String',num2str(get(hObject,'Value')));
TRef = get(hObject,'Value');
[tab1 tab2 tab3 purete] = Gestion(MMeth, MEau,TRef,TWGS);
 set(handles.uitable1,'data',tab1);
 set(handles.uitable6,'data',tab2);
 set(handles.uitable8,'data',tab3);
 set(handles.text14,'String',purete);

% --- Executes during object creation, after setting all properties.
function slider7_CreateFcn(hObject, eventdata, handles)
global slider7;
% hObject    handle to slider7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: slider controls usually have a light gray background.
slider7 = hObject;
if isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor',[.9 .9 .9]);
end


% --- Executes during object creation, after setting all properties.
function text7_CreateFcn(hObject, eventdata, handles)
% hObject    handle to text7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called



function edit3_Callback(hObject, eventdata, handles)
global TRef TWGS MMeth MEau;
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit3 as text
%        str2double(get(hObject,'String')) returns contents of edit3 as a double
MMeth = str2num(get(hObject,'String'));
[tab1 tab2 tab3 purete] = Gestion(MMeth, MEau,TRef,TWGS);
 set(handles.uitable1,'data',tab1);
 set(handles.uitable6,'data',tab2);
  set(handles.text12,'String',MEau*0.016/(MMeth*0.018));
 set(handles.uitable8,'data',tab3);
 set(handles.text14,'String',purete);

% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
global edit3;
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
edit3 = hObject;
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit4_Callback(hObject, eventdata, handles)
global TRef TWGS MMeth MEau;
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double
MEau = str2num(get(hObject,'String'));
[tab1 tab2 tab3 purete] = Gestion(MMeth, MEau,TRef,TWGS);
 set(handles.uitable1,'data',tab1);
 set(handles.uitable6,'data',tab2);
 set(handles.text12,'String',MEau*0.016/(MMeth*0.018));
  set(handles.uitable8,'data',tab3);
 set(handles.text14,'String',purete);

% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
global edit4;
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
edit4 = hObject;
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Creates and returns a handle to the GUI figure. 
function h1 = Prod_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end
load Prod_export.mat


appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', 2, ...
    'text', 16, ...
    'uitable', 9, ...
    'uipanel', 5, ...
    'slider', 8, ...
    'popupmenu', 3, ...
    'uibuttongroup', 3, ...
    'axes', 2, ...
    'togglebutton', 2, ...
    'listbox', 3, ...
    'checkbox', 2, ...
    'edit', 5), ...
    'override', 0, ...
    'release', [], ...
    'resize', 'none', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', '/home/louis/P3-Matlab/Prod_export.m', ...
    'lastFilename', '/home/louis/P3-Matlab/Prod.fig');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'PaperUnits','inches',...
'Units','characters',...
'Position',[135.857142857143 21 133.857142857143 55.875],...
'Visible',get(0,'defaultfigureVisible'),...
'Color',get(0,'defaultfigureColor'),...
'CurrentAxesMode','manual',...
'IntegerHandle','off',...
'MenuBar','none',...
'Name','Prod',...
'NumberTitle','off',...
'Tag','figure1',...
'Resize','off',...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'PaperSize',[8.5 11],...
'PaperSizeMode',get(0,'defaultfigurePaperSizeMode'),...
'PaperType','usletter',...
'PaperTypeMode',get(0,'defaultfigurePaperTypeMode'),...
'PaperUnitsMode',get(0,'defaultfigurePaperUnitsMode'),...
'ScreenPixelsPerInchMode','manual',...
'HandleVisibility','callback',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel1';

h2 = uipanel(...
'Parent',h1,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units','characters',...
'Title','Resultat',...
'Position',[1.28571428571429 1 130.571428571429 37],...
'Tag','uipanel1',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uitable1';
appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [4 2] [7 5] 'DataDefault' [2 3] {  'CH4' 'H2O' 'CO' 'CO2' 'H2' } {  'Reformeur - 1er Reacteur WGS [mol/s]' '1er Reacteur WGS [mol/s]' '2eme Reacteur WGS [mol/s]' ' Refroidissement et absorption du C02 [mol/s]' 'Methanation [mol/s]' 'Sortie [mol/s]' 'Sortie [T/j]' } } };

h3 = uitable(...
'Parent',h2,...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'Units','characters',...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',{  'CH4'; 'H2O'; 'CO'; 'CO2'; 'H2' },...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'RowName',{  'Reformeur - 1er Reacteur WGS [mol/s]'; '1er Reacteur WGS [mol/s]'; '2eme Reacteur WGS [mol/s]'; ' Refroidissement et absorption du C02 [mol/s]'; 'Methanation [mol/s]'; 'Sortie [mol/s]'; 'Sortie [T/j]' },...
'Position',[2.42857142857143 25.0625 124.857142857143 10],...
'ColumnEditable',mat{1},...
'ColumnFormat',{  'bank' 'bank' 'bank' 'bank' 'bank' },...
'Data',{  [] [] [] [] []; [] [] [] [] []; [] [] [] [] []; [] [] [] [] []; [] [] [] [] []; [] [] [] [] []; [] [] [] [] [] },...
'RearrangeableColumns','on',...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'TooltipString',blanks(0),...
'Visible',get(0,'defaultuitableVisible'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable1',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'text2';

h4 = uicontrol(...
'Parent',h2,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'HorizontalAlignment','left',...
'String','Table des flux entrant dans les différentes parties du système et à la sortie de notre usine',...
'Style','text',...
'Position',[2.42857142857143 23.3125 92.7142857142857 1.125],...
'Children',[],...
'Tag','text2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uitable6';
appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'ColumnNameTyped' 'RowNameTyped' } {  [4 2] [4 5] 'DataDefault' [2 3] {  'CH4' 'H2O' 'O2' 'N2' 'Air' } {  'Four[mol/s]' 'Four[T/j]' 'Total[mol/s]' 'Total[T/j]' } } };

h5 = uitable(...
'Parent',h2,...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'Units','characters',...
'BackgroundColor',get(0,'defaultuitableBackgroundColor'),...
'ColumnName',{  'CH4'; 'H2O'; 'O2'; 'N2'; 'Air' },...
'ColumnWidth',{  'auto' 'auto' 'auto' 'auto' 'auto' },...
'RowName',{  'Four[mol/s]'; 'Four[T/j]'; 'Total[mol/s]'; 'Total[T/j]' },...
'Position',[2.42857142857143 16.4375 72.8571428571428 6.25],...
'ColumnEditable',mat{2},...
'ColumnFormat',{  'bank' 'bank' 'bank' 'bank' 'bank' },...
'Data',{  [] [] [] [] []; [] [] [] [] []; [] [] [] [] []; [] [] [] [] [] },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'TooltipString',blanks(0),...
'Visible',get(0,'defaultuitableVisible'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable6',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'text3';

h6 = uicontrol(...
'Parent',h2,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'HorizontalAlignment','left',...
'String','Table des flux entrant dans le four et pour notre systeme en entier',...
'Style','text',...
'Position',[2.42857142857143 14.1875 63.7142857142857 1.625],...
'Children',[],...
'Tag','text3',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text13';

h7 = uicontrol(...
'Parent',h2,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','Indice de pureté de H2:',...
'Style','text',...
'Position',[83 18.375 22.2857142857143 0.8125],...
'Children',[],...
'Tag','text13',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text14';

h8 = uicontrol(...
'Parent',h2,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String',{  'Static Text' },...
'Style','text',...
'Position',[106.714285714286 18.375 7.42857142857143 0.8125],...
'BackgroundColor',[0.831372549019608 0.815686274509804 0.784313725490196],...
'Children',[],...
'Tag','text14',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uitable8';
appdata.PropertyMetaData = {  {  'DataPropertyDimension' 'DataPropertyConditionedDimension' 'DataPropertySource' 'BackgroundColorPropertyDimension' 'RowNameTyped' 'ColumnNameTyped' } {  [4 2] [8 2] 'DataDefault' [2 3] {  'Four: Augmenter la température' 'Four: Combustion' 'Reformeur: Augmenter la température' 'Reformeur: Reaction SMR et WGS' 'WGS 1: Diminuer la température' 'WGS 1: Reaction' 'WGS 2 : Diminuer la température' 'WGS 2 : Reaction' } {  'Energie [MJ/s]' 'Donne/reçue' } } };

h9 = uitable(...
'Parent',h2,...
'FontUnits',get(0,'defaultuitableFontUnits'),...
'Units','characters',...
'BackgroundColor',[1 1 1;0.941176470588235 0.941176470588235 0.941176470588235],...
'ColumnName',{  'Energie [MJ/s]'; 'Donne/reçue' },...
'ColumnWidth',{  'auto' 'auto' },...
'RowName',{  'Four: Augmenter la température'; 'Four: Combustion'; 'Reformeur: Augmenter la température'; 'Reformeur: Reaction SMR et WGS'; 'WGS 1: Diminuer la température'; 'WGS 1: Reaction'; 'WGS 2 : Diminuer la température'; 'WGS 2 : Reaction' },...
'Position',[2.42857142857143 2.5 80.7142857142857 11.0625],...
'ColumnEditable',mat{3},...
'ColumnFormat',{  'bank' [] },...
'Data',{  [] blanks(0); [] blanks(0); [] blanks(0); [] blanks(0); [] blanks(0); [] blanks(0); [] blanks(0); [] blanks(0) },...
'RearrangeableColumns',get(0,'defaultuitableRearrangeableColumns'),...
'RowStriping',get(0,'defaultuitableRowStriping'),...
'CellEditCallback',blanks(0),...
'CellSelectionCallback',blanks(0),...
'Children',[],...
'ForegroundColor',get(0,'defaultuitableForegroundColor'),...
'Enable',get(0,'defaultuitableEnable'),...
'TooltipString',blanks(0),...
'Visible',get(0,'defaultuitableVisible'),...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','uitable8',...
'UserData',[],...
'KeyPressFcn',blanks(0),...
'KeyReleaseFcn',blanks(0),...
'HandleVisibility',get(0,'defaultuitableHandleVisibility'),...
'FontSize',get(0,'defaultuitableFontSize'),...
'FontName',get(0,'defaultuitableFontName'),...
'FontAngle',get(0,'defaultuitableFontAngle'),...
'FontWeight',get(0,'defaultuitableFontWeight'));

appdata = [];
appdata.lastValidTag = 'text15';

h10 = uicontrol(...
'Parent',h2,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','Table des flux d''énergie donnés et demandés dans les différentes parties du système',...
'Style','text',...
'Position',[2.42857142857143 0.8125 81.8571428571428 1.0625],...
'Children',[],...
'Tag','text15',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'uipanel2';

h11 = uipanel(...
'Parent',h1,...
'FontUnits',get(0,'defaultuipanelFontUnits'),...
'Units','characters',...
'Title','Parametre',...
'Position',[13 38.625 107.285714285714 15.625],...
'Tag','uipanel2',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'slider3';

h12 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'HorizontalAlignment',get(0,'defaultuicontrolHorizontalAlignment'),...
'ListboxTop',get(0,'defaultuicontrolListboxTop'),...
'Max',670,...
'Min',470,...
'String',blanks(0),...
'Style','slider',...
'Value',500,...
'Position',[2.85714285714286 4.8125 40 1],...
'BackgroundColor',[0.9 0.9 0.9],...
'Callback',@(hObject,eventdata)Prod_export('slider3_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'ButtonDownFcn',@(hObject,eventdata)Prod_export('slider3_ButtonDownFcn',hObject,eventdata,guidata(hObject)),...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Prod_export('slider3_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','slider3',...
'KeyPressFcn',@(hObject,eventdata)Prod_export('slider3_KeyPressFcn',hObject,eventdata,guidata(hObject)));

appdata = [];
appdata.lastValidTag = 'text4';

h13 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','Temperature du reacteur WGS',...
'Style','text',...
'Position',[8.28571428571428 7.0625 29.1428571428571 0.8125],...
'Children',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'Tag','text4');

appdata = [];
appdata.lastValidTag = 'text6';

h14 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','Temperature du reformeur',...
'Style','text',...
'Position',[8.28571428571428 11.375 29.1428571428571 0.8125],...
'Children',[],...
'ButtonDownFcn',blanks(0),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag','text6');

appdata = [];
appdata.lastValidTag = 'slider7';

h15 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'Max',1220,...
'Min',1020,...
'String',{  'Slider' },...
'Style','slider',...
'Value',1100,...
'Position',[2.85714285714286 9.125 40 1],...
'BackgroundColor',[0.9 0.9 0.9],...
'Callback',@(hObject,eventdata)Prod_export('slider7_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Prod_export('slider7_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','slider7');

appdata = [];
appdata.lastValidTag = 'text7';

h16 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String',{  'Static Text' },...
'Style','text',...
'Position',[44.5714285714286 9.1875 7.42857142857143 1.0625],...
'BackgroundColor',[0.831372549019608 0.815686274509804 0.784313725490196],...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Prod_export('text7_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','text7');

appdata = [];
appdata.lastValidTag = 'text8';

h17 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String',{  'Static Text' },...
'Style','text',...
'Position',[44.2857142857143 5.125 7.42857142857143 0.8125],...
'BackgroundColor',[0.831372549019608 0.815686274509804 0.784313725490196],...
'Children',[],...
'Tag','text8',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit3';

h18 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','400',...
'Style','edit',...
'Position',[84 8.8125 8.57142857142857 1.375],...
'Callback',@(hObject,eventdata)Prod_export('edit3_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Prod_export('edit3_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit3');

appdata = [];
appdata.lastValidTag = 'edit4';

h19 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','1500',...
'Style','edit',...
'Position',[84 4.8125 8.57142857142857 1.375],...
'Callback',@(hObject,eventdata)Prod_export('edit4_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)Prod_export('edit4_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit4');

appdata = [];
appdata.lastValidTag = 'text9';

h20 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','Flux entrant de H2O',...
'Style','text',...
'Position',[78.7142857142857 7.125 19.1428571428571 0.8125],...
'Children',[],...
'Tag','text9',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text10';

h21 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','Flux entrant de CH4 [T/j]',...
'Style','text',...
'Position',[76.7142857142857 11.0625 23.1428571428571 0.8125],...
'Children',[],...
'Tag','text10',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text11';

h22 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String','Le rapport des flux molaire (H2O/CH4):',...
'Style','text',...
'Position',[52.8571428571429 2.5625 37.1428571428571 1.125],...
'Children',[],...
'Tag','text11',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text12';

h23 = uicontrol(...
'Parent',h11,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','characters',...
'String',{  'Static Text' },...
'Style','text',...
'Position',[90.1428571428571 2.75 7.42857142857143 0.9375],...
'BackgroundColor',[0.831372549019608 0.815686274509804 0.784313725490196],...
'Children',[],...
'Tag','text12',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % PROD_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % PROD_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % PROD_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % PROD_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI MATLAB code file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    % Call version of openfig that accepts 'auto' option"
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
%     %workaround for CreateFcn not called to create ActiveX
%         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
%         for i=1:length(peers)
%             if isappdata(peers(i),'Control')
%                 actxproxy(peers(i));
%             end            
%         end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end


